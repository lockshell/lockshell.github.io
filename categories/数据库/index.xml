<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据库 on 络壳 LockShell</title>
    <link>https://lockshell.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/</link>
    <description>Recent content in 数据库 on 络壳 LockShell</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 26 Aug 2019 20:47:37 +0800</lastBuildDate>
    
	<atom:link href="https://lockshell.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Django数据库分库&#43;读写分离</title>
      <link>https://lockshell.com/2019/08/26/django-database-partition/</link>
      <pubDate>Mon, 26 Aug 2019 20:47:37 +0800</pubDate>
      
      <guid>https://lockshell.com/2019/08/26/django-database-partition/</guid>
      <description>为了解决单个数据库的性能问题，除了使用性能更好的硬件之外，另外一个思路就是将一个数据库切分成多个部分放到不同的数据库上，从而缓解单一数据库的</description>
    </item>
    
    <item>
      <title>MySQL优化思路-后端</title>
      <link>https://lockshell.com/2019/08/23/mysql-optimization-of-backend/</link>
      <pubDate>Fri, 23 Aug 2019 22:42:49 +0800</pubDate>
      
      <guid>https://lockshell.com/2019/08/23/mysql-optimization-of-backend/</guid>
      <description>基本思路 首先是如何定位性能瓶颈？ 一般使用show命令、慢查询日志、explain、profiling等进行分析。 当服务器的负载增加时，使用S</description>
    </item>
    
  </channel>
</rss>